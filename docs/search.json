[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ambu Vijayan. Author, maintainer. J. Sreekumar. Author.            Principal Scientist, ICAR - Central Tuber Crops Research Institute","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vijayan , Sreekumar J (2023). baseq: Basic Sequence Processing Tool Biological Data. R package version 0.1.4, https://github.com/ambuvjyn/baseq.","code":"@Manual{,   title = {baseq: Basic Sequence Processing Tool for Biological Data},   author = {Ambu Vijayan and J. Sreekumar},   year = {2023},   note = {R package version 0.1.4},   url = {https://github.com/ambuvjyn/baseq}, }"},{"path":[]},{"path":"/index.html","id":"basic-sequence-processing-tool-for-biological-data","dir":"","previous_headings":"","what":"Basic Sequence Processing Tool for Biological Data","title":"Basic Sequence Processing Tool for Biological Data","text":"Developed Ambu Vijayan Dr. J. Sreekumar 📓 baseq : Basic Sequence Processing Tool Biological Data 🔢 Version 0.1.4 #️⃣ Commands : 💡 Preprocessing : 🧬 clean_sequence() 🧬 clean_DNA_sequence() 🧬 clean_RNA_sequence() 🧬 clean_DNA_file() 🧬 clean_RNA_file() 🧬 count_bases() 🧬 count_seq_pattern() 🧬 gc_content() 🧬 gc_content_file() 💡 DNA : 🧬 dna_to_protein() 🧬 dna_to_rna() 🧬 reverse_complement() 💡 RNA : 🧬 rna_reverse_complement() 🧬 rna_to_dna() 🧬 rna_to_protein() 💡 Readers : 🧬 read_fasta() 🧬 read.fasta_to_df() 🧬 read.fasta_to_list() 🧬 read.fastq_to_list() 💡 Writers : 🧬 write.df_to_fasta() 🧬 write.df_to_fastq() 🧬 write.list_to_fasta() 🧬 write.list_to_fastq() 💡 Converters : 🧬 fastq_to_fasta()","code":""},{"path":"/index.html","id":"commands-are-explained-below","dir":"","previous_headings":"","what":"Commands are explained below","title":"Basic Sequence Processing Tool for Biological Data","text":"clean_sequence function tool takes DNA RNA sequence input removes characters , C, G, T (DNA) , C, G, U (RNA). returns character string containing cleaned sequence. function takes two parameters: sequence, character string containing DNA RNA sequence cleaned, type, character string indicating type sequence. default value type “DNA”. set “RNA”, function remove characters , C, G, U. function returns cleaned sequence character string. examples show function can used clean DNA RNA sequence. count_bases function takes DNA sequence character string counts number ’s, C’s, G’s, T’s sequence. function returns counts named integer vector, names elements correspond nucleotides. function can used bioinformatics applications analyze DNA sequences understand characteristics, GC content motif analysis. count_seq_pattern function counts frequency specific character pattern given DNA sequence. function takes two arguments: seq, character vector representing DNA sequence, pattern, character string representing pattern counted sequence. function returns integer representing count pattern sequence. function case-insensitive converts sequence uppercase counting pattern frequency. function useful various bioinformatics applications, identifying sequence motifs determining frequency particular nucleotide sequences. gc_content function calculates percentage nucleotides given DNA sequence guanine (G) cytosine (C), returns value numeric. function first checks input sequence validity (must character string, contain valid DNA characters), calculates GC content counting number G C nucleotides dividing length sequence, returns result. function can useful many bioinformatics applications GC content sequence may important, primer design, genome assembly, gene expression analysis. reverse_complement() function takes DNA sequence input, generates reverse complement sequence, returns . function converts sequence uppercase, creates named vector base complements, reverses sequence replaces base complement. resulting reverse complement sequence returned character string. rna_reverse_complement function generates reverse complement given RNA sequence replacing base complement, defined complements vector. function takes single argument, sequence, character string containing RNA sequence reversed complemented. function returns character string containing reverse complement input RNA sequence. function case-insensitive can handle RNA sequences containing bases , C, G, U. dna_to_rna function takes DNA sequence input returns RNA transcript replacing thymine (T) nucleotides uracil (U) nucleotides. function useful bioinformatics applications require conversion DNA sequences corresponding RNA transcripts, gene expression analysis. dna_to_protein function bioinformatics tool translates DNA sequence corresponding protein sequences six reading frames. uses genetic code dictionary convert DNA sequence amino acid sequences. output list character strings representing translated protein sequences six frames. function takes single argument, character string representing DNA sequence, returns list translated protein sequences. rna_to_dna function takes RNA sequence input returns DNA transcript replacing Us Ts. function takes RNA sequence input returns DNA complement. rna_to_protein function takes RNA sequence input translates six reading frames, producing list character strings representing translated protein sequences. function defines genetic code loops frame (1 forward, 2 forward, 3 forward, 1 reverse, 2 reverse, 3 reverse) translate sequence triplets. resulting protein sequences stored list returned. fastq_to_fasta function converts FASTQ file FASTA file. @ symbol beginning FASTQ sequence names removed replaced > symbol FASTA format. output file name input FASTQ file, extension changed .fasta. function takes character string specifying path input FASTQ file input returns character string specifying path output FASTA file. read.fasta_to_df function reads fasta file creates dataframe two columns, “Header” “Sequence”. resulting dataframe assigned environment name fasta file name without .fasta extension. function initializes empty dataframe, loops fasta file, reads header sequence lines, adds header sequence lines dataframe. function return anything, assigns resulting dataframe environment. read.fasta_to_list function reads FASTA file creates list two columns: “Header” “Sequence”. list assigned environment name FASTA file name without .fasta extension. resulting list can accessed name environment. function return anything, instead assigns resulting list environment. function useful bioinformatics reading sequence data FASTA files accessing easily R. read.fastq_to_df function reads Fastq file stores dataframe three columns: Header, Sequence, QualityScore. function takes character string specifying path Fastq file read, returns dataframe aforementioned columns. function loops Fastq file, reading four lines time, adds four lines dataframe. function closes file assigns dataframe environment. Finally, function prints message indicating successful assignment. read.fastq_to_list function reads Fastq file stores list three columns: Header, Sequence, QualityScore. function takes character string specifying path Fastq file read returns list aforementioned columns. function loops Fastq file, reads four lines time, removes @ symbol header, adds sequence list header list element name. Finally, function closes file, assigns list environment, prints message indicating successful assignment. write.df_to_fasta function used write data frame containing FASTA records file FASTA format. data frame assumed two columns, “Header” “Sequence”, represent header sequence lines FASTA record, respectively. output file named input data frame “.fasta” extension, written working directory. function return value writes FASTA file working directory write.df_to_fastq function writes FASTQ file data frame containing reads format “Header”, “Sequence”, “QualityScore”. output file name input data frame. function loops data frame writes read output file FASTQ format. closes output file removes temporary file. Finally, prints message indicating successful writing data frame FASTQ file. write.list_to_fasta function takes list sequences writes FASTA file. element list character string representing single sequence. function uses name list base name output file .fasta extension. sequence written output file FASTA format sequence name header. function loops list elements writes sequence file FASTA format. output file closed message printed indicating successful write. write.list_to_fastq function tool writes list DNA sequences corresponding quality scores FASTQ file format. function takes list sequences input, element list named list containing “Sequence” “QualityScore” elements. output file name set input list name .fastq extension. sequence list written output file FASTQ format, sequence name used header quality scores following line. function prints message indicating successful write. gc_content_file function takes multi-FASTA file input, calculates GC content sequence file, writes results new FASTA file. function first reads input file, parses sequence names sequences, calculates GC content sequence using function splits sequence individual nucleotides counts number Gs Cs. GC content added sequence names, results written new file name format “inputfilename_with_GC_content.fasta”. clean_DNA_file function R reads multi-FASTA file containing DNA sequences, removes characters , T, G, C, writes cleaned sequences new multi-FASTA file. name output file generated adding suffix ’_clean.fasta’ input file name. function returns character string specifying path output FASTA file. function works opening input file, reading sequences headers, cleaning sequences, writing cleaned sequences output file. clean_RNA_file function reads multi-FASTA file containing RNA sequences, removes characters , U, G, C, writes cleaned sequences new multi-FASTA file. name output file generated adding suffix ’_clean.fasta’ input file name. function returns character string specifying path output FASTA file. function works opening input file, reading sequences headers, cleaning sequences, writing cleaned sequences output file. clean_DNA_sequence function simple bioinformatics utility removes characters , C, G, T given DNA sequence. input DNA sequence character string, output cleaned DNA sequence character string , C, G, T characters. function can useful data cleaning preprocessing steps downstream analysis, sequence alignment variant calling. function exported can used functions scripts require cleaning DNA sequences. clean_RNA_sequence function takes RNA sequence input removes characters , C, G, U. function useful cleaning RNA sequences downstream analysis, sequence alignment expression analysis. function first converts sequence upper case, removes characters , C, G, U using regular expressions. cleaned sequence returned output. Links : 🔗 CRAN REPO version 0.1.1 : baseq: Basic Sequence Processing Tool Biological Data Authors : Ambu Vijayan Young Professional, ICAR - Central Tuber Crops Research Institute Dr. J. Sreekumar Principal Scientist, ICAR - Central Tuber Crops Research Institute Maintainer : Ambu Vijayan","code":""},{"path":"/reference/clean_DNA_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean DNA file — clean_DNA_file","title":"Clean DNA file — clean_DNA_file","text":"function reads multi FASTA file containing DNA sequences, removes characters , T, G, C, writes cleaned sequences new multi FASTA file. output file name generated input file name suffix '_clean.fasta'.","code":""},{"path":"/reference/clean_DNA_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean DNA file — clean_DNA_file","text":"","code":"clean_DNA_file(input_file)"},{"path":"/reference/clean_DNA_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean DNA file — clean_DNA_file","text":"input_file name input multi FASTA file.","code":""},{"path":"/reference/clean_DNA_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean DNA file — clean_DNA_file","text":"character string specifying path output FASTA file.","code":""},{"path":"/reference/clean_DNA_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean DNA file — clean_DNA_file","text":"","code":"sample_file_path_three <- system.file(\"extdata\", \"sample2_fa.fasta\", package = \"baseq\") clean_DNA_file(sample_file_path_three) #> Cleaned sequences written to file 'C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample2_fa_clean.fasta'."},{"path":"/reference/clean_DNA_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean DNA sequence — clean_DNA_sequence","title":"Clean DNA sequence — clean_DNA_sequence","text":"function takes DNA sequence input removes characters , C, G, T.","code":""},{"path":"/reference/clean_DNA_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean DNA sequence — clean_DNA_sequence","text":"","code":"clean_DNA_sequence(sequence)"},{"path":"/reference/clean_DNA_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean DNA sequence — clean_DNA_sequence","text":"sequence DNA sequence cleaned","code":""},{"path":"/reference/clean_DNA_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean DNA sequence — clean_DNA_sequence","text":"Cleaned DNA sequence","code":""},{"path":"/reference/clean_DNA_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean DNA sequence — clean_DNA_sequence","text":"","code":"clean_DNA_sequence(\"ATGTCGTAGCTAGCTN\") #> [1] \"ATGTCGTAGCTAGCT\" # Output: \"ATGTCGTAGCTAGCT\""},{"path":"/reference/clean_RNA_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean RNA file — clean_RNA_file","title":"Clean RNA file — clean_RNA_file","text":"function reads multi FASTA file containing RNA sequences, removes characters , T, G, C, writes cleaned sequences new multi FASTA file. output file name generated input file name suffix '_clean.fasta'.","code":""},{"path":"/reference/clean_RNA_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean RNA file — clean_RNA_file","text":"","code":"clean_RNA_file(input_file)"},{"path":"/reference/clean_RNA_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean RNA file — clean_RNA_file","text":"input_file name input multi FASTA file.","code":""},{"path":"/reference/clean_RNA_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean RNA file — clean_RNA_file","text":"character string specifying path output FASTA file.","code":""},{"path":"/reference/clean_RNA_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean RNA file — clean_RNA_file","text":"","code":"sample_file_path_three <- system.file(\"extdata\", \"sample2_fa.fasta\", package = \"baseq\") clean_RNA_file(sample_file_path_three) #> Cleaned sequences written to file 'C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample2_fa_clean.fasta'."},{"path":"/reference/clean_RNA_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean RNA sequence — clean_RNA_sequence","title":"Clean RNA sequence — clean_RNA_sequence","text":"function takes RNA sequence input removes characters , C, G, T.","code":""},{"path":"/reference/clean_RNA_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean RNA sequence — clean_RNA_sequence","text":"","code":"clean_RNA_sequence(sequence)"},{"path":"/reference/clean_RNA_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean RNA sequence — clean_RNA_sequence","text":"sequence RNA sequence cleaned","code":""},{"path":"/reference/clean_RNA_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean RNA sequence — clean_RNA_sequence","text":"Cleaned RNA sequence","code":""},{"path":"/reference/clean_RNA_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean RNA sequence — clean_RNA_sequence","text":"","code":"clean_RNA_sequence(\"AUGUCGTAGCTAGCTN\") #> [1] \"AUGUCGAGCAGC\" # Output: \"AUGUCGAGCAGC\""},{"path":"/reference/clean_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean DNA or RNA sequence — clean_sequence","title":"Clean DNA or RNA sequence — clean_sequence","text":"function takes DNA RNA sequence input removes characters , C, G, T (DNA) , C, G, U (RNA).","code":""},{"path":"/reference/clean_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean DNA or RNA sequence — clean_sequence","text":"","code":"clean_sequence(sequence, type = \"DNA\")"},{"path":"/reference/clean_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean DNA or RNA sequence — clean_sequence","text":"sequence character string containing DNA RNA sequence cleaned. type character string indicating type sequence. default \"DNA\". set \"RNA\", function remove characters , C, G, U.","code":""},{"path":"/reference/clean_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean DNA or RNA sequence — clean_sequence","text":"character string containing cleaned DNA RNA sequence.","code":""},{"path":"/reference/clean_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean DNA or RNA sequence — clean_sequence","text":"","code":"clean_sequence(\"atgcNnRYMK\") # Returns \"ATGC\" #> [1] \"ATGC\" clean_sequence(\"auggcuuNnRYMK\", type = \"RNA\") # Returns \"AUGGCUU\" #> [1] \"AUGGCUU\""},{"path":"/reference/count_bases.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","title":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","text":"function takes single argument, DNA sequence character string, counts number 's, C's, G's, T's sequence. counts returned named vector.","code":""},{"path":"/reference/count_bases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","text":"","code":"count_bases(sequence)"},{"path":"/reference/count_bases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","text":"sequence character string containing DNA sequence","code":""},{"path":"/reference/count_bases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","text":"named integer vector containing counts 's, C's, G's, T's","code":""},{"path":"/reference/count_bases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of A's, C's, G's, and T's in a DNA sequence — count_bases","text":"","code":"sequence <- \"ATCGAGCTAGCTAGCTAGCTAGCT\" count_bases(sequence) #> A C G T  #> 6 6 6 6  # A  C  G  T # 6  6  6  6"},{"path":"/reference/count_seq_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Count frequency of a pattern in a sequence — count_seq_pattern","title":"Count frequency of a pattern in a sequence — count_seq_pattern","text":"function counts frequency specific character pattern given sequence.","code":""},{"path":"/reference/count_seq_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count frequency of a pattern in a sequence — count_seq_pattern","text":"","code":"count_seq_pattern(seq, pattern)"},{"path":"/reference/count_seq_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count frequency of a pattern in a sequence — count_seq_pattern","text":"seq character vector representing sequence count pattern . pattern character string representing pattern count sequence.","code":""},{"path":"/reference/count_seq_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count frequency of a pattern in a sequence — count_seq_pattern","text":"integer representing count pattern sequence.","code":""},{"path":"/reference/count_seq_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count frequency of a pattern in a sequence — count_seq_pattern","text":"","code":"seq <- \"ATGGTGCTCCGTGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCTACGTAG\" count_seq_pattern(seq, \"CG\") #> [1] 31 # [1] 31"},{"path":"/reference/dna_to_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Translation of a DNA sequence — dna_to_protein","title":"Translation of a DNA sequence — dna_to_protein","text":"function takes DNA sequence input translates six reading frames.","code":""},{"path":"/reference/dna_to_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translation of a DNA sequence — dna_to_protein","text":"","code":"dna_to_protein(sequence)"},{"path":"/reference/dna_to_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translation of a DNA sequence — dna_to_protein","text":"sequence character string representing DNA sequence.","code":""},{"path":"/reference/dna_to_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translation of a DNA sequence — dna_to_protein","text":"list character strings representing translated protein sequences six frames.","code":""},{"path":"/reference/dna_to_protein.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translation of a DNA sequence — dna_to_protein","text":"","code":"sequence <- \"ATCGAGCTAGCTAGCTAGCTAGCT\" dna_to_protein(sequence) #> $`Frame F1` #> [1] \"IELAS\" #>  #> $`Frame F2` #> [1] \"SS\" #>  #> $`Frame F3` #> [1] \"RAS\" #>  #> $`Frame R1` #> [1] \"S\" #>  #> $`Frame R2` #> [1] \"AS\" #>  #> $`Frame R3` #> [1] \"LAS\" #>  # Returns a list containing the translated protein sequences in all six frames: # $`Frame F1` # [1] \"IELAS\" # # $`Frame F2` # [1] \"SS\" # # $`Frame F3` # [1] \"RAS\" # # $`Frame R1` # [1] \"S\" # # $`Frame R2` # [1] \"AS\" # # $`Frame R3` # [1] \"LAS\""},{"path":"/reference/dna_to_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcription of a DNA sequence — dna_to_rna","title":"Transcription of a DNA sequence — dna_to_rna","text":"function takes DNA sequence input returns RNA transcript.","code":""},{"path":"/reference/dna_to_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription of a DNA sequence — dna_to_rna","text":"","code":"dna_to_rna(sequence)"},{"path":"/reference/dna_to_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription of a DNA sequence — dna_to_rna","text":"sequence character string representing DNA sequence.","code":""},{"path":"/reference/dna_to_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcription of a DNA sequence — dna_to_rna","text":"character string representing RNA transcript input DNA sequence.","code":""},{"path":"/reference/dna_to_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transcription of a DNA sequence — dna_to_rna","text":"","code":"sequence <- \"ATCGAGCTAGCTAGCTAGCTAGCT\" dna_to_rna(sequence) #> [1] \"AUCGAGCUAGCUAGCUAGCUAGCU\" # Returns \"AUCGAGCUAGCUAGCUAGCUAGCU\""},{"path":"/reference/fastq_to_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","title":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","text":"function converts FASTQ file FASTA file. output file name input FASTQ file, extension changed .fasta. function removes @ symbol beginning FASTQ sequence names replaces > symbol FASTA format.","code":""},{"path":"/reference/fastq_to_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","text":"","code":"fastq_to_fasta(fastq_file)"},{"path":"/reference/fastq_to_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","text":"fastq_file character string specifying path input FASTQ file.","code":""},{"path":"/reference/fastq_to_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","text":"character string specifying path output FASTA file.","code":""},{"path":"/reference/fastq_to_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a FASTQ file to a FASTA file — fastq_to_fasta","text":"","code":"sample_file_path_two <- system.file(\"extdata\", \"sample_fq.fastq\", package = \"baseq\") fastq_to_fasta(sample_file_path_two) #> [1] \"C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fq.fasta\" # Output: \"path/to/library/baseq/extdata/sample_fa.fasta\""},{"path":"/reference/gc_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GC content of a DNA sequence — gc_content","title":"Calculate GC content of a DNA sequence — gc_content","text":"Calculates percentage nucleotides DNA sequence either guanine (G) cytosine (C).","code":""},{"path":"/reference/gc_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GC content of a DNA sequence — gc_content","text":"","code":"gc_content(sequence)"},{"path":"/reference/gc_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GC content of a DNA sequence — gc_content","text":"sequence character string containing DNA sequence.","code":""},{"path":"/reference/gc_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GC content of a DNA sequence — gc_content","text":"numeric value representing percentage nucleotides sequence G C.","code":""},{"path":"/reference/gc_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate GC content of a DNA sequence — gc_content","text":"","code":"sequence <- \"ATCGAGCTAGCTAGCTAGCTAGCT\" gc_content(sequence) #> [1] 50 50 #> [1] 50"},{"path":"/reference/gc_content_file.html","id":null,"dir":"Reference","previous_headings":"","what":"GC content of sequences in a multi FASTA file — gc_content_file","title":"GC content of sequences in a multi FASTA file — gc_content_file","text":"Function calculate GC content sequences multi FASTA file write results new FASTA file","code":""},{"path":"/reference/gc_content_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GC content of sequences in a multi FASTA file — gc_content_file","text":"","code":"gc_content_file(input_file)"},{"path":"/reference/gc_content_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GC content of sequences in a multi FASTA file — gc_content_file","text":"input_file string indicating path name input multi-FASTA file","code":""},{"path":"/reference/gc_content_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GC content of sequences in a multi FASTA file — gc_content_file","text":"","code":"sample_file_path <- system.file(\"extdata\", \"sample_fa.fasta\", package = \"baseq\")  clean_DNA_file(sample_file_path) #> Cleaned sequences written to file 'C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fa_clean.fasta'."},{"path":"/reference/read.fasta_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","title":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","text":"function reads fasta file creates dataframe two columns: Header Sequence. dataframe assigned environment name fasta file name without .fasta extension.","code":""},{"path":"/reference/read.fasta_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","text":"","code":"read.fasta_to_df(fasta_file)"},{"path":"/reference/read.fasta_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","text":"fasta_file path fasta file read.","code":""},{"path":"/reference/read.fasta_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","text":"function return anything. assigns resulting dataframe environment.","code":""},{"path":"/reference/read.fasta_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a fasta file into a dataframe and assign to the environment — read.fasta_to_df","text":"","code":"sample_file_path <- system.file(\"extdata\", \"sample_fa.fasta\", package = \"baseq\")  read.fasta_to_df(sample_file_path) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fa.fasta assigned as a dataframe with name sample_fa"},{"path":"/reference/read.fasta_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","title":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","text":"function reads fasta file creates list two columns: Header Sequence. list assigned environment name fasta file name without .fasta extension.","code":""},{"path":"/reference/read.fasta_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","text":"","code":"read.fasta_to_list(fasta_file)"},{"path":"/reference/read.fasta_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","text":"fasta_file path fasta file read.","code":""},{"path":"/reference/read.fasta_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","text":"function return anything. assigns resulting list environment.","code":""},{"path":"/reference/read.fasta_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a fasta file into a list and assign to the environment — read.fasta_to_list","text":"","code":"sample_file_path <- system.file(\"extdata\", \"sample_fa.fasta\", package = \"baseq\")  read.fasta_to_list(sample_file_path) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fa.fasta assigned as a list with name sample_fa  # Access a specific sequence by name sample_fa[[\"sample_seq.1\"]] #> [1] \"TGATTGAGGTGACAGTTTCTGAGTTAAACTGCAGATCGGAAGAGCACAC\""},{"path":"/reference/read.fastq_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","title":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","text":"function reads Fastq file stores dataframe three columns: Header, Sequence, QualityScore.","code":""},{"path":"/reference/read.fastq_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","text":"","code":"read.fastq_to_df(fastq_file)"},{"path":"/reference/read.fastq_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","text":"fastq_file character string specifying path Fastq file read.","code":""},{"path":"/reference/read.fastq_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","text":"function returns dataframe three columns: Header, Sequence, QualityScore.","code":""},{"path":"/reference/read.fastq_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Fastq file and store it as a dataframe — read.fastq_to_df","text":"","code":"sample_file_path_two <- system.file(\"extdata\", \"sample_fq.fastq\", package = \"baseq\")  read.fastq_to_df(sample_file_path_two) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fq.fastq assigned as a dataframe with name sample_fq"},{"path":"/reference/read.fastq_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Fastq file and store it as a list — read.fastq_to_list","title":"Read a Fastq file and store it as a list — read.fastq_to_list","text":"function reads Fastq file stores list three columns: Header, Sequence, QualityScore.","code":""},{"path":"/reference/read.fastq_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Fastq file and store it as a list — read.fastq_to_list","text":"","code":"read.fastq_to_list(fastq_file)"},{"path":"/reference/read.fastq_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Fastq file and store it as a list — read.fastq_to_list","text":"fastq_file character string specifying path Fastq file read.","code":""},{"path":"/reference/read.fastq_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Fastq file and store it as a list — read.fastq_to_list","text":"function returns list three columns: Header, Sequence, QualityScore.","code":""},{"path":"/reference/read.fastq_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Fastq file and store it as a list — read.fastq_to_list","text":"","code":"# \\donttest{ # Read in sequences from a FASTQ file  sample_file_path_two <- system.file(\"extdata\", \"sample_fq.fastq\", package = \"baseq\")  read.fastq_to_list(sample_file_path_two) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fq.fastq assigned as a list with name sample_fq  # }"},{"path":"/reference/reverse_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Reverse Complement of DNA sequence — reverse_complement","title":"Generate Reverse Complement of DNA sequence — reverse_complement","text":"Given DNA sequence, function generates reverse complement sequence returns .","code":""},{"path":"/reference/reverse_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Reverse Complement of DNA sequence — reverse_complement","text":"","code":"reverse_complement(sequence)"},{"path":"/reference/reverse_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Reverse Complement of DNA sequence — reverse_complement","text":"sequence character string containing DNA sequence reversed complemented","code":""},{"path":"/reference/reverse_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Reverse Complement of DNA sequence — reverse_complement","text":"character string containing reverse complement input DNA sequence","code":""},{"path":"/reference/reverse_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Reverse Complement of DNA sequence — reverse_complement","text":"","code":"sequence <- \"ATCGAGCTAGCTAGCTAGCTAGCT\" reverse_complement(sequence) #> [1] \"AGCTAGCTAGCTAGCTAGCTCGAT\" # [1] \"AGCTAGCTAGCTAGCTAGCTCGAT\""},{"path":"/reference/rna_reverse_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","title":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","text":"Given DNA sequence, function generates reverse complement sequence returns .","code":""},{"path":"/reference/rna_reverse_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","text":"","code":"rna_reverse_complement(sequence)"},{"path":"/reference/rna_reverse_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","text":"sequence character string containing DNA sequence reversed complemented","code":""},{"path":"/reference/rna_reverse_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","text":"character string containing reverse complement input DNA sequence","code":""},{"path":"/reference/rna_reverse_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Reverse Complement of DNA sequence — rna_reverse_complement","text":"","code":"sequence <- \"AUCGAGCUAGCUAGCUAGCUAGCU\" rna_reverse_complement(sequence) #> [1] \"AGCUAGCUAGCUAGCUAGCUCGAU\" # [1] \"AGCUAGCUAGCUAGCUAGCUCGAU\""},{"path":"/reference/rna_to_dna.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Transcription of a RNA sequence — rna_to_dna","title":"Reverse Transcription of a RNA sequence — rna_to_dna","text":"function takes RNA sequence input returns DNA transcript.","code":""},{"path":"/reference/rna_to_dna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Transcription of a RNA sequence — rna_to_dna","text":"","code":"rna_to_dna(sequence)"},{"path":"/reference/rna_to_dna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Transcription of a RNA sequence — rna_to_dna","text":"sequence character string representing RNA sequence.","code":""},{"path":"/reference/rna_to_dna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse Transcription of a RNA sequence — rna_to_dna","text":"character string representing RNA transcript input RNA sequence.","code":""},{"path":"/reference/rna_to_dna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse Transcription of a RNA sequence — rna_to_dna","text":"","code":"sequence <- \"AUCGAGCUAGCUAGCUAGCUAGCU\" rna_to_dna(sequence) #> [1] \"ATCGAGCTAGCTAGCTAGCTAGCT\" # Returns \"ATCGAGCTAGCTAGCTAGCTAGCT\""},{"path":"/reference/rna_to_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Translation of a RNA sequence — rna_to_protein","title":"Translation of a RNA sequence — rna_to_protein","text":"function takes RNA sequence input translates six reading frames.","code":""},{"path":"/reference/rna_to_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translation of a RNA sequence — rna_to_protein","text":"","code":"rna_to_protein(sequence)"},{"path":"/reference/rna_to_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translation of a RNA sequence — rna_to_protein","text":"sequence character string representing RNA sequence.","code":""},{"path":"/reference/rna_to_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translation of a RNA sequence — rna_to_protein","text":"list character strings representing translated protein sequences six frames.","code":""},{"path":"/reference/rna_to_protein.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translation of a RNA sequence — rna_to_protein","text":"","code":"sequence <- \"AUCGAGCUAGCUAGCUAGCUAGCU\" rna_to_protein(sequence) #> $`Frame F1` #> [1] \"IELAS\" #>  #> $`Frame F2` #> [1] \"SS\" #>  #> $`Frame F3` #> [1] \"RAS\" #>  #> $`Frame R1` #> [1] \"S\" #>  #> $`Frame R2` #> [1] \"AS\" #>  #> $`Frame R3` #> [1] \"LAS\" #>  # Returns a list containing the translated protein sequences in all six frames: # $`Frame F1` # [1] \"IELAS\" # # $`Frame F2` # [1] \"SS\" # # $`Frame F3` # [1] \"RAS\" # # $`Frame R1` # [1] \"S\" # # $`Frame R2` # [1] \"AS\" # # $`Frame R3` # [1] \"LAS\""},{"path":"/reference/write.df_to_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a data frame to a fasta file — write.df_to_fasta","title":"Write a data frame to a fasta file — write.df_to_fasta","text":"function writes data frame fasta file name data frame. data frame assumed two columns, \"Header\" \"Sequence\", represent header sequence lines fasta record, respectively.","code":""},{"path":"/reference/write.df_to_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a data frame to a fasta file — write.df_to_fasta","text":"","code":"write.df_to_fasta(df)"},{"path":"/reference/write.df_to_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a data frame to a fasta file — write.df_to_fasta","text":"df data frame containing fasta records \"Header\" \"Sequence\" columns.","code":""},{"path":"/reference/write.df_to_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a data frame to a fasta file — write.df_to_fasta","text":"function return value, writes fasta file working directory.","code":""},{"path":"/reference/write.df_to_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a data frame to a fasta file — write.df_to_fasta","text":"","code":"sample_file_path <- system.file(\"extdata\", \"sample_fa.fasta\", package = \"baseq\") read.fasta_to_df(sample_file_path) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fa.fasta assigned as a dataframe with name sample_fa  write.df_to_fasta(sample_fa) #> Data frame sample_fa written to fasta file sample_fa.fasta"},{"path":"/reference/write.df_to_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","title":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","text":"Write FASTQ file dataframe reads","code":""},{"path":"/reference/write.df_to_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","text":"","code":"write.df_to_fastq(df)"},{"path":"/reference/write.df_to_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","text":"df dataframe containing reads format \"Header\", \"Sequence\", \"QualityScore\".","code":""},{"path":"/reference/write.df_to_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","text":"FASTQ file name input dataframe.","code":""},{"path":"/reference/write.df_to_fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a FASTQ file from a dataframe of reads — write.df_to_fastq","text":"","code":"sample_file_path_two <- system.file(\"extdata\", \"sample_fq.fastq\", package = \"baseq\") read.fastq_to_df(sample_file_path_two) #> File C:/Users/BSL CTCRI/AppData/Local/Temp/RtmpYlDm86/temp_libpath4930397d444/baseq/extdata/sample_fq.fastq assigned as a dataframe with name sample_fq write.df_to_fastq(sample_fq) #> Dataframe sample_fq written to FASTQ file sample_fq.fastq"},{"path":"/reference/write.list_to_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a list of sequences to a FASTA file — write.list_to_fasta","title":"Write a list of sequences to a FASTA file — write.list_to_fasta","text":"function takes list sequences writes FASTA file. name list used base name output file .fasta extension. sequence list written output file FASTA format sequence name header.","code":""},{"path":"/reference/write.list_to_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a list of sequences to a FASTA file — write.list_to_fasta","text":"","code":"write.list_to_fasta(sequence_list)"},{"path":"/reference/write.list_to_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a list of sequences to a FASTA file — write.list_to_fasta","text":"sequence_list list sequences element list character string representing single sequence.","code":""},{"path":"/reference/write.list_to_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a list of sequences to a FASTA file — write.list_to_fasta","text":"","code":"sequences <- list(\"ACGT\", \"ATCG\") write.list_to_fasta(sequences) #> List sequences written to FASTA file sequences.fasta"},{"path":"/reference/write.list_to_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a list of sequences and quality scores to a FASTQ file — write.list_to_fastq","title":"Write a list of sequences and quality scores to a FASTQ file — write.list_to_fastq","text":"function takes list sequences quality scores writes FASTQ file. name list used base name output file .fastq extension. sequence list written output file FASTQ format sequence name header quality scores following line.","code":""},{"path":"/reference/write.list_to_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a list of sequences and quality scores to a FASTQ file — write.list_to_fastq","text":"","code":"write.list_to_fastq(sequence_list)"},{"path":"/reference/write.list_to_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a list of sequences and quality scores to a FASTQ file — write.list_to_fastq","text":"sequence_list list sequences element list named list containing \"Sequence\" \"QualityScore\" elements.","code":""},{"path":"/reference/write.list_to_fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a list of sequences and quality scores to a FASTQ file — write.list_to_fastq","text":"","code":"sequences <- list(\"ACGT\", \"ATCG\") quality_scores <- list(\"IIII\", \"JJJJ\") sequences_list <- list(seq1=list(Sequence=sequences[[1]], QualityScore=quality_scores[[1]]),                        seq2=list(Sequence=sequences[[2]], QualityScore=quality_scores[[2]])) write.list_to_fastq(sequences_list) #> List sequences_list written to FASTQ file sequences_list.fastq"},{"path":"/news/index.html","id":"baseq-010","dir":"Changelog","previous_headings":"","what":"baseq 0.1.0","title":"baseq 0.1.0","text":"CRAN release: 2023-03-22 Added NEWS.md file track changes package.","code":""},{"path":"/news/index.html","id":"baseq-011","dir":"Changelog","previous_headings":"","what":"baseq 0.1.1","title":"baseq 0.1.1","text":"CRAN release: 2023-04-25 Added 14 new functions Updated README","code":""}]
